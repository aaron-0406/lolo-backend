"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const validator_handler_1 = __importDefault(require("../middlewares/validator.handler"));
const customer_user_schema_1 = __importDefault(require("../app/customers/schemas/customer-user.schema"));
const customer_user_controller_1 = require("../controllers/customer-user.controller");
const auth_handler_1 = require("../middlewares/auth.handler");
const { getCustomerUserSchema, getCustomerUserByIdSchema, createCustomerUserSchema, updateCustomerUserSchema, updateCustomerUserStateSchema, } = customer_user_schema_1.default;
const router = express_1.default.Router();
router.get("/", auth_handler_1.JWTAuth, customer_user_controller_1.getCustomerUsersController);
router.get("/users/:customerId", auth_handler_1.JWTAuth, (0, validator_handler_1.default)(getCustomerUserByIdSchema, "params"), customer_user_controller_1.getCustomerUserByCustomerIdController);
router.get("/:id", auth_handler_1.JWTAuth, (0, validator_handler_1.default)(getCustomerUserSchema, "params"), customer_user_controller_1.getCustomerUserByIdController);
router.post("/", auth_handler_1.JWTAuth, (0, validator_handler_1.default)(createCustomerUserSchema, "body"), customer_user_controller_1.createCustomerUserController);
router.patch("/state/:id", auth_handler_1.JWTAuth, (0, validator_handler_1.default)(getCustomerUserSchema, "params"), (0, validator_handler_1.default)(updateCustomerUserStateSchema, "body"), customer_user_controller_1.updateCustomerUserStateController);
router.patch("/:id", auth_handler_1.JWTAuth, (0, validator_handler_1.default)(getCustomerUserSchema, "params"), (0, validator_handler_1.default)(updateCustomerUserSchema, "body"), customer_user_controller_1.updateCustomerUserController);
router.delete("/:id", auth_handler_1.JWTAuth, (0, validator_handler_1.default)(getCustomerUserSchema, "params"), customer_user_controller_1.deleteCustomerUserController);
exports.default = router;
