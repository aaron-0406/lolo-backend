"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const validator_handler_1 = __importDefault(require("../../middlewares/validator.handler"));
const dash_ip_address_bank_schema_1 = __importDefault(require("../../app/dash/schemas/dash-ip-address-bank.schema"));
const dash_ip_address_bank_controller_1 = require("../../controllers/dash/dash-ip-address-bank-controller");
const auth_handler_1 = require("../../middlewares/auth.handler");
const { createIpAddressSchema, updateIpAddressStateSchema, updateIpAddressSchema, getIpAddressSchema, getIpAddressByIpSchema, } = dash_ip_address_bank_schema_1.default;
const router = express_1.default.Router();
router.get("/", auth_handler_1.JWTAuth, dash_ip_address_bank_controller_1.getDashIpAddressController);
router.get("/:id", auth_handler_1.JWTAuth, (0, validator_handler_1.default)(getIpAddressSchema, "params"), dash_ip_address_bank_controller_1.getDashIpAddressByIdController);
router.get("/:ip", auth_handler_1.JWTAuth, (0, validator_handler_1.default)(getIpAddressByIpSchema, "params"), dash_ip_address_bank_controller_1.getDashIpAddressByIpController);
router.post("/", auth_handler_1.JWTAuth, (0, auth_handler_1.checkPermissions)("P14-01"), (0, validator_handler_1.default)(createIpAddressSchema, "body"), dash_ip_address_bank_controller_1.createDashIpAddressController);
router.patch("/state/:id", auth_handler_1.JWTAuth, (0, auth_handler_1.checkPermissions)("P14-02"), (0, validator_handler_1.default)(getIpAddressSchema, "params"), (0, validator_handler_1.default)(updateIpAddressStateSchema, "body"), dash_ip_address_bank_controller_1.updateDashIpAddressStateController);
router.patch("/:id", auth_handler_1.JWTAuth, (0, auth_handler_1.checkPermissions)("P14-03"), (0, validator_handler_1.default)(getIpAddressSchema, "params"), (0, validator_handler_1.default)(updateIpAddressSchema, "body"), dash_ip_address_bank_controller_1.updateDashIpAddressController);
router.delete("/:id", auth_handler_1.JWTAuth, (0, auth_handler_1.checkPermissions)("P14-04"), (0, validator_handler_1.default)(getIpAddressSchema, "params"), dash_ip_address_bank_controller_1.deleteDashIpAddressController);
exports.default = router;
